ekf_filter_node:
  ros__parameters:
    frequency: 50.0  # taxa de fusão
    two_d_mode: true
    publish_acceleration: false
    publish_tf: true

    # Frames
    map_frame: map
    odom_frame: odom
    base_link_frame: base_footprint    
    world_frame: odom

    sensor_timeout: 0.2  # considera perdido se >0.2s sem mensagem
    print_diagnostics: true
    reset_on_time_jump: true

    # ---------------- IMU ----------------
    imu0: imu/data
    imu0_config: [false, false, false,
                  true,  true,  true,
                  false, false, false,
                  false,  false,  true,
                  true,  false,  false]
    imu0_differential: false

    # --------------- ODOM --------------- 
    # Use a odometria do seu controlador mecanum (normalmente nav_msgs/Odometry)
    # Ajuste o tópico! Ex.: /mecanum_controller/odometry
    odom0: /mecanum_controller/odometry
    odom0_config: [false, false,  false,
                       false, false, false,
                       true, true, false,
                       false, false, true,
                       false, false, false]

    # Ruído de processo (ponto de partida). Pode reduzir yaw se ficar muito ruidoso.
    #! [ADVANCED] The process noise covariance matrix can be difficult to tune, and can vary for each application, so it is
    #! exposed as a configuration parameter. This matrix represents the noise we add to the total error after each
    #! prediction step. The better the omnidirectional motion model matches your system, the smaller these values can be.
    #! However, if users find that a given variable is slow to converge, one approach is to increase the
    #! process_noise_covariance diagonal value for the variable in question, which will cause the filter's predicted error
    #! to be larger, which will cause the filter to trust the incoming measurement more during correction. The values are
    #! ordered as x, y, z, roll, pitch, yaw, vx, vy, vz, vroll, vpitch, vyaw, ax, ay, az. Defaults to the matrix below if
    #! unspecified.
    #! Note: the specification of covariance matrices can be cumbersome, so all matrix parameters in this package support
    #! both full specification or specification of only the diagonal values.
    process_noise_covariance: [0.05, 0.0,    0.0,    0.0,    0.0,    0.0,    0.0,     0.0,     0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
                                0.0,    0.05, 0.0,    0.0,    0.0,    0.0,    0.0,     0.0,     0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
                                0.0,    0.0,    0.06, 0.0,    0.0,    0.0,    0.0,     0.0,     0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
                                0.0,    0.0,    0.0,    0.03, 0.0,    0.0,    0.0,     0.0,     0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
                                0.0,    0.0,    0.0,    0.0,    0.03, 0.0,    0.0,     0.0,     0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
                                0.0,    0.0,    0.0,    0.0,    0.0,    0.06, 0.0,     0.0,     0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
                                0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.025, 0.0,     0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
                                0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,     0.025, 0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
                                0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,     0.0,     0.04, 0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
                                0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,     0.0,     0.0,    0.01, 0.0,    0.0,    0.0,    0.0,    0.0,
                                0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,     0.0,     0.0,    0.0,    0.01, 0.0,    0.0,    0.0,    0.0,
                                0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,     0.0,     0.0,    0.0,    0.0,    0.02, 0.0,    0.0,    0.0,
                                0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,     0.0,     0.0,    0.0,    0.0,    0.0,    0.01, 0.0,    0.0,
                                0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,     0.0,     0.0,    0.0,    0.0,    0.0,    0.0,    0.01, 0.0,
                                0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,     0.0,     0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.015]

    #! [ADVANCED] This represents the initial value for the state estimate error covariance matrix. Setting a diagonal
    #! value (variance) to a large value will result in rapid convergence for initial measurements of the variable in
    #! question. Users should take care not to use large values for variables that will not be measured directly. The values
    #! are ordered as x, y, z, roll, pitch, yaw, vx, vy, vz, vroll, vpitch, vyaw, ax, ay, az. Defaults to the diagonal values below
    #! if unspecified. In this example, we specify only the diagonal of the matrix.
    initial_estimate_covariance: [1e-9, 1e-9, 1e-9, 1e-9, 1e-9, 1e-9, 1e-9, 1e-9, 1e-9, 1e-9, 1e-9, 1e-9, 1e-9, 1e-9, 1e-9]
